const isInit=e=>e.$el.data("resizableColumns")!==void 0,initResizable=e=>{e.options.resizable&&!e.options.cardView&&!isInit(e)&&e.$el.resizableColumns({store:window.store})},destroy=e=>{isInit(e)&&e.$el.data("resizableColumns").destroy()},reInitResizable=e=>{destroy(e),initResizable(e)};$.extend($.fn.bootstrapTable.defaults,{resizable:!1});const BootstrapTable=$.fn.bootstrapTable.Constructor,_initBody=BootstrapTable.prototype.initBody,_toggleView=BootstrapTable.prototype.toggleView,_resetView=BootstrapTable.prototype.resetView;BootstrapTable.prototype.initBody=function(...e){const t=this;_initBody.apply(this,Array.prototype.slice.apply(e)),t.$el.off("column-switch.bs.table page-change.bs.table").on("column-switch.bs.table page-change.bs.table",()=>{reInitResizable(t)})},BootstrapTable.prototype.toggleView=function(...e){_toggleView.apply(this,Array.prototype.slice.apply(e)),this.options.resizable&&this.options.cardView&&destroy(this)},BootstrapTable.prototype.resetView=function(...e){const t=this;_resetView.apply(this,Array.prototype.slice.apply(e)),this.options.resizable&&setTimeout(()=>{initResizable(t)},100)};
