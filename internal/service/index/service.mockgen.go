// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/index/service.go
//
// Generated by this command:
//
//	mockgen -source=internal/service/index/service.go -destination internal/service/index/service.mockgen.go -package=index
//

// Package index is a generated GoMock package.
package index

import (
	context "context"
	reflect "reflect"

	v1 "github.com/ch3nnn/webstack-go/api/v1"
	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
	isgomock struct{}
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// About mocks base method.
func (m *MockService) About(ctx *gin.Context) (*v1.AboutResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "About", ctx)
	ret0, _ := ret[0].(*v1.AboutResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// About indicates an expected call of About.
func (mr *MockServiceMockRecorder) About(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "About", reflect.TypeOf((*MockService)(nil).About), ctx)
}

// Index mocks base method.
func (m *MockService) Index(ctx context.Context) (*v1.IndexResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", ctx)
	ret0, _ := ret[0].(*v1.IndexResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Index indicates an expected call of Index.
func (mr *MockServiceMockRecorder) Index(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockService)(nil).Index), ctx)
}

// i mocks base method.
func (m *MockService) i() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "i")
}

// i indicates an expected call of i.
func (mr *MockServiceMockRecorder) i() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "i", reflect.TypeOf((*MockService)(nil).i))
}
